import React, { useState, useEffect } from "react";
import { Layout, Menu, theme, Button, Drawer } from "antd";
import {
  UserOutlined,
  TrophyOutlined,
  FileOutlined,
  MenuOutlined,
  SettingOutlined,
  UserAddOutlined,
  LogoutOutlined,
} from "@ant-design/icons";
import { Link, useNavigate, Outlet } from "react-router-dom";
import { useUserAuth } from "./Context/UserAuth"; // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏à‡∏≤‡∏Å Context

const { Header, Content, Sider } = Layout;

const App = () => {
  const {
    token: { colorBgContainer, borderRadiusLG },
  } = theme.useToken();

  const [collapsed, setCollapsed] = useState(false);
  const [mobileView, setMobileView] = useState(window.innerWidth < 768);
  const [drawerVisible, setDrawerVisible] = useState(false); // üîπ ‡πÄ‡∏û‡∏¥‡πà‡∏° state ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Drawer

  const { user, role, logOut } = useUserAuth(); // üîπ ‡πÄ‡∏û‡∏¥‡πà‡∏° role ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡πÄ‡∏°‡∏ô‡∏π
  const navigate = useNavigate();

  // ‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏Ç‡∏ô‡∏≤‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ï‡∏±‡∏î‡∏™‡∏¥‡∏ô‡πÉ‡∏à‡πÅ‡∏™‡∏î‡∏á Drawer (‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠) ‡∏´‡∏£‡∏∑‡∏≠ Sider (PC)
  useEffect(() => {
    const handleResize = () => {
      const isMobile = window.innerWidth < 768;
      setMobileView(isMobile);
      setCollapsed(isMobile);
    };
    window.addEventListener("resize", handleResize);

    return () => window.removeEventListener("resize", handleResize);
  }, []);

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô Logout
  const handleLogout = async () => {
    await logOut();
    navigate("/login");
  };

  // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏°‡∏ô‡∏π‡∏ï‡∏≤‡∏° role ‡∏Ç‡∏≠‡∏á user
  const menuItems = [
    {
      key: "1",
      icon: <UserOutlined />,
      label: <Link to="/">Dashboard</Link>,
    },
    {
      key: "2",
      icon: <TrophyOutlined />,
      label: <Link to="/tournaments">Tournaments</Link>,
    },
    {
      key: "3",
      icon: <FileOutlined />,
      label: <Link to="/evaluation">Evaluation</Link>,
    },
    {
      key: "4",
      icon: <SettingOutlined />,
      label: <Link to="/setting">Setting</Link>,
    },
    // üîπ ‡πÄ‡∏â‡∏û‡∏≤‡∏∞ admin ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏´‡πá‡∏ô‡πÄ‡∏°‡∏ô‡∏π "Manage Directors" ‡πÅ‡∏•‡∏∞ "User Management"
    ...(role === "admin"
      ? [
          {
            key: "5",
            icon: <UserAddOutlined />,
            label: <Link to="/manage-directors">Manage Directors</Link>,
          },
          {
            key: "6",
            icon: <UserOutlined />,
            label: <Link to="/user-management">User Management</Link>,
          },
        ]
      : []),
  ];

  return (
    <Layout>
      {/* üîπ ‡∏ñ‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡πÄ‡∏•‡πá‡∏Å (mobileView) ‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á Drawer */}
      {mobileView ? (
        <Drawer
          title="Menu"
          placement="left"
          closable={true}
          onClose={() => setDrawerVisible(false)} // üîπ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÉ‡∏´‡πâ‡∏õ‡∏¥‡∏î Drawer ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
          open={drawerVisible}
        >
          <Menu
            theme="light"
            mode="vertical"
            items={menuItems}
            onClick={() => setDrawerVisible(false)} // üîπ ‡∏õ‡∏¥‡∏î Drawer ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Ñ‡∏•‡∏¥‡∏Å‡πÄ‡∏°‡∏ô‡∏π
          />
        </Drawer>
      ) : (
        // üîπ ‡∏ñ‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡πÉ‡∏´‡∏ç‡πà (PC) ‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ Sider
        <Sider
          breakpoint="lg"
          collapsible
          collapsed={collapsed}
          onCollapse={setCollapsed}
          style={{
            position: "fixed",
            top: 0,
            left: 0,
            bottom: 0,
            backgroundColor: "#fff",
            zIndex: 100,
            transition: "all 0.3s",
          }}
        >
          <Menu
            theme="light"
            mode="inline"
            items={menuItems}
            style={{ color: "#000" }}
          />
        </Sider>
      )}

      {/* üîπ ‡∏™‡πà‡∏ß‡∏ô Layout ‡∏î‡πâ‡∏≤‡∏ô‡∏Ç‡∏ß‡∏≤ */}
      <Layout
        style={{
          marginLeft: mobileView ? 0 : collapsed ? 80 : 200, // üîπ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç margin-left ‡πÉ‡∏´‡πâ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°
          transition: "all 0.3s",
        }}
      >
        <Header
          style={{
            display: "flex",
            alignItems: "center",
            background: colorBgContainer,
            transition: "all 0.3s",
          }}
        >
          {/* üîπ ‡∏õ‡∏∏‡πà‡∏°‡πÅ‡∏Æ‡∏°‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÄ‡∏Å‡∏≠‡∏£‡πå ‡πÄ‡∏°‡∏ô‡∏π (‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡πÄ‡∏•‡πá‡∏Å) */}
          {mobileView && (
            <Button
              type="text"
              icon={<MenuOutlined />}
              onClick={() => setDrawerVisible(true)} // üîπ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡∏¥‡∏î Drawer ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
              style={{ fontSize: "18px", marginLeft: "16px" }}
            />
          )}
          <h2
            style={{
              color: "#1890ff",
              textAlign: "center",
              width: "100%",
              margin: 0,
            }}
          >
            MY COMP
          </h2>

          {user && (
            <Button
              type="primary"
              icon={<LogoutOutlined />}
              onClick={handleLogout}
              style={{ marginLeft: "auto" }}
            >
              Logout
            </Button>
          )}
        </Header>

        <Content
          style={{
            margin: "24px 16px 0",
            display: "flex",
            flexDirection: "column",
            minHeight: "100vh",
            transition: "all 0.3s",
          }}
        >
          <div
            style={{
              flex: 1,
              padding: 24,
              background: colorBgContainer,
              borderRadius: borderRadiusLG,
            }}
          >
            {/* üîπ ‡∏™‡πà‡∏ß‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á‡πÜ ‡∏ï‡∏≤‡∏°‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á‡πÉ‡∏ô index.jsx */}
            <Outlet />
          </div>
        </Content>
      </Layout>
    </Layout>
  );
};

export default App;
