import React, { useState, useEffect } from "react";
import { Modal, Form, Input, Radio, Button, message } from "antd";
import { registerTournament } from "../services/registrationService";

const TournamentRegister = ({ visible, onClose, tournament, userId }) => {
  const [form] = Form.useForm();
  const [teamType, setTeamType] = useState("individual");
  const [loading, setLoading] = useState(false);

  useEffect(() => {
    if (visible) {
      form.resetFields();
    }
  }, [visible]);

  const handleRegister = async () => {
    try {
      const values = await form.validateFields();

      console.log("üü¢ Form Values:", values);
      console.log("üü¢ Tournament:", tournament);
      console.log("üü¢ User ID:", userId);

      if (!tournament || !tournament.id) {
        message.error("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡πÅ‡∏Ç‡πà‡∏á‡∏Ç‡∏±‡∏ô");
        return;
      }

      const teamMembers =
        teamType === "team" && values.teamMembers
          ? values.teamMembers.split(",").map((name) => name.trim())
          : [];

      console.log("üü¢ Final Data:", {
        tournamentId: tournament.id,
        userId,
        teamType,
        teamMembers,
      });

      setLoading(true);
      await registerTournament(tournament.id, userId, teamType, teamMembers);

      message.success("‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡πÅ‡∏Ç‡πà‡∏á‡∏Ç‡∏±‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!");
      form.resetFields();
      onClose();
    } catch (error) {
      message.error("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏°‡∏±‡∏Ñ‡∏£");
    } finally {
      setLoading(false);
    }
  };

  return (
    <Modal title="‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡πÅ‡∏Ç‡πà‡∏á‡∏Ç‡∏±‡∏ô" open={visible} onCancel={onClose} footer={null}>
      <Form form={form} layout="vertical">
        <Form.Item label="‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏≤‡∏£‡πÅ‡∏Ç‡πà‡∏á‡∏Ç‡∏±‡∏ô">
          <Radio.Group
            value={teamType}
            onChange={(e) => setTeamType(e.target.value)}
          >
            <Radio value="individual">‡πÄ‡∏î‡∏µ‡πà‡∏¢‡∏ß</Radio>
            <Radio value="team">‡∏ó‡∏µ‡∏°</Radio>
          </Radio.Group>
        </Form.Item>
        {teamType === "team" && (
          <Form.Item
            label="‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÉ‡∏ô‡∏ó‡∏µ‡∏° (‡∏Ñ‡∏±‡πà‡∏ô‡∏î‡πâ‡∏ß‡∏¢ ,)"
            name="teamMembers"
            rules={[{ required: true, message: "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å" }]}
          >
            <Input.TextArea rows={3} placeholder="‡πÄ‡∏ä‡πà‡∏ô ‡∏™‡∏°‡∏ä‡∏≤‡∏¢, ‡∏™‡∏°‡∏®‡∏£‡∏µ, ‡∏™‡∏°‡∏õ‡∏≠‡∏á" />
          </Form.Item>
        )}
        <Button type="primary" onClick={handleRegister} loading={loading} block>
          ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡πÅ‡∏Ç‡πà‡∏á‡∏Ç‡∏±‡∏ô
        </Button>
      </Form>
    </Modal>
  );
};

export default TournamentRegister;
